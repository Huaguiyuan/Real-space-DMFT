#!/bin/bash
#PBS -S /bin/bash
#PBS -j oe
#PBS -l nodes=1:ppn=4
#PBS -N trap_prova

EXE=ahmmpt_matsubara_trap_symm
EXEDIR=~/.bin

#MPI SPECIFIC:
MPIDIR=/opt/mpich2-1.2.1/bin
NCPU=`wc -l < $PBS_NODEFILE`
NNODES=`uniq $PBS_NODEFILE | wc -l`
NOW=`date +%H:%M-%a-%d/%b/%Y`
MACHINESFILE=$PBS_O_WORKDIR/mpd.hosts
cat $PBS_NODEFILE >  $MACHINESFILE


#    Start up the mpd daemons and check the mpd ring.         #
###############################################################
prologo()
{
    echo ' '
    echo ' starting up mpd daemons '
    export MPD_CON_EXT=${PBS_JOBID}
    echo "mpdboot -n $NNODES -f $MACHINESFILE -v &"
    mpdboot -n ${NNODES} -f ${MACHINESFILE} -v &
    sleep 5
    mpdtrace -l
    mpdringtest 100
}


#    Execute the run.  Do not run in the background.       #
############################################################
run()
{
    cd $PBS_O_WORKDIR
    echo "$MPIDIR/mpiexec -n $NCPU ${EXEDIR}/${EXE}"
    $MPIDIR/mpiexec -n $NCPU ${EXEDIR}/${EXE}
}



#   Kill the mdp daemons.                                 #
###########################################################
chiusura()
{
    echo ' '
    echo 'Killing mpd daemons'
    mpdallexit
}


###########################################################
# HERE IS THE REAL WORK                                   #
###########################################################
echo ------------------------------------------------------
echo 'This job is allocated on '${NCPU}' cpu(s)'
echo 'Job is running on node(s): '
cat  $PBS_NODEFILE
echo ------------------------------------------------------
echo WORKINFO:
echo PBS: qsub is running on   $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is   $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: current home directory is $PBS_O_HOME
echo ""
echo JOBINFO:
echo PBS: execution mode is    $PBS_ENVIRONMENT
echo PBS: job identifier is    $PBS_JOBID
echo PBS: job name is          $PBS_JOBNAME
echo ""
echo NODEINFO:
echo PBS: node file is         $PBS_NODEFILE
echo PBS: number of nodes is   $NNODES
echo PBS: number of cpu        $NCPU
echo ------------------------------------------------------
prologo
run
chiusura


